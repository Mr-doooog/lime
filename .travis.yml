language: cpp
sudo: required
compiler:
  - gcc
  - clang

before_install:
  - sudo apt-get -qq update
  - sudo apt-get -qq upgrade
  - sudo apt-get -qq install build-essential llvm cmake
  - sudo apt-get -qq install libopencv-dev libgtest-dev
  - sudo apt-get -qq install ruby

  # Install LCOV
  - git clone https://github.com/linux-test-project/lcov.git
  - make -C lcov install
  - sudo gem install coveralls-lcov

install:
  - mkdir build && cd build
  - cmake -D LIME_BUILD_TESTS=ON
          -D LIME_BUILD_EXAPMLES=ON
          -D LIME_BUILD_PYTHON_MODULE=ON ..
  - cmake --build . -- -j4

script:
  # Clear coverage infomation
  - lcov --directory . --zerocounters

  # Run test on Docker container
  - make check

after_success:
  # Collect coverage
  - if [ $CXX = "g++"     ]; lcov --directory . --capture --output-file coverage.info; fi
  - if [ $CXX = "clang++" ]; lcov --directory . --capture --output-file coverage.info --gcov-tool llvm-cov; fi
  - lcov --remove coverage.info 'tests/*' 'examples/*' '/usr/*' 'CMakeFiles/*' --output-file coverage.info
  - lcov --list coverage.info
  - coveralls-lcov --repo-token c6Fd5h2Ovd2c5PV7agagA89sUhsZCwIPR coverage.info

before_deploy:
  - docker cp lime-env:/root/lime/VERSION .
  - export LIME_VERSION=`cat VERSION`
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  - sudo apt-get -qq install doxygen
  - wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/anaconda
  - export PATH="$HOME/anaconda/bin:$PATH"
  - conda update --yes conda
  - conda install --yes sphinx
  - pip install breathe sphinx_rtd_theme
  - patch -u $HOME/anaconda/lib/python3.6/site-packages/breathe/renderer/sphinxrenderer.py < docs/sphinxrenderer.py.patch
  - cd docs && sh ./deploy_docs.sh && cd -
  - mkdir packages
  - tar czvf packages/releases-v${LIME_VERSION}.tar.gz $(ls -I packages)
  - zip -q packages/releases-v${LIME_VERSION}.zip -r $(ls -I packages)
  - git tag v${LIME_VERSION} -a -m "Commit from Travis CI for build $TRAVIS_BUILD_NUMBER"
  - git push --tags --quiet https://$GH_TOKEN@github.com/tatsy/lime.git 2> /dev/null

deploy:
  skip_cleanup: true
  provider: releases
  api-key:
    secure: "PDNTAv4hlKC9ABcjsUj3HdYb3GvBRqENug1WcYuPwQNYlU4jhjHwmgvaVDEaelwDok/BGIfHP0RSEufg5NGDiFtDZGcO82uu5827Sf4E8Iajki34Mv+RgxH+9vPaf1UzY1+j98RxtVIPsrQcv9wQtBvw/9Jpn0t/XX1AvBmGe4Y="
  file:
    - packages/releases-v${LIME_VERSION}.tar.gz
    - packages/releases-v${LIME_VERSION}.zip
  on:
    tags: false
    branch: master
    condition: "$CXX = clang++ && $PYTHON_VERSION = 3.5"

branches:
  only:
    - master
    - dev

env:
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.5

notifications:
    email:
        recipients: tatsy.mail@gmail.com
        on_success: change
        on_failure: always
